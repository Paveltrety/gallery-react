{"version":3,"sources":["redux/actions/usersAction.ts","components/Users.tsx","assets/loaded.gif","components/Loaded.tsx","components/Album.tsx","redux/actions/albumAction.ts","redux/actions/photoAction.ts","components/Modal.tsx","components/Photos.tsx","components/Start.tsx","App.tsx","redux/reducers/usersReducer.ts","redux/reducers/photoReducer.ts","redux/reducers/albumReducer.ts","redux/store.ts","index.tsx"],"names":["setLoadingUsers","value","type","payload","Users","dispatch","useDispatch","state","useSelector","users","usersPage","activeUser","useEffect","fetch","then","response","json","className","map","item","onClick","id","to","username","Loaded","src","loaded","alt","Album","userId","useParams","albums","photos","isLoadedAlbums","isLoadedPhotos","coverAlbum","idAlbum","find","albumId","url","length","fetchAlbums","title","filter","setLoadingFalse","setModalActive","status","photoId","indexPhoto","Modal","props","console","log","closeWindow","indexPhotoActive","handleOutsideClick","event","path","composedPath","includes","sortRef","current","React","document","querySelector","addEventListener","useRef","modalActive","ref","photosLength","Photos","history","useHistory","photosForAlbum","isLoaded","fullPhoto","fetchPhotoForAlbum","goBack","index","thumbnailUrl","Start","App","exact","component","initialState","usersReducer","action","photoReducer","albumReducer","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"uNAkCaA,EAAkB,SAACC,GAAD,MAA0C,CACrEC,KA/BsB,oBAgCtBC,QAASF,ICMEG,EAlCD,WACV,IAAMC,EAAWC,cACXC,EAAQC,aAAY,SAACD,GAAD,MAAuB,CAC7CE,MAAOF,EAAMG,UAAUD,MACvBE,WAAYJ,EAAMG,UAAUC,eAMhC,OAHAC,qBAAU,WACNP,GDWwB,SAACA,GAC7BA,EAASL,GAAgB,IACzBa,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIX,EAT8C,CAChEH,KApBc,YAqBdC,QAOoCa,YCdjC,CAACX,IAEA,wBAAQY,UAAU,SAAlB,SACI,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,aAAf,SACI,oBAAIA,UAAU,cAAd,SAEQV,EAAME,MAAMS,KAAI,SAACC,GACb,OACI,oBACIF,UAAU,mBAEVG,QAAS,kBAAMf,EDUc,CACjEH,KAnCoB,kBAoCpBC,QCZ0EgB,EAAKE,MAH/C,SAII,eAAC,IAAD,CAASC,GAAE,gBAAWH,EAAKE,IAAMJ,UAAWV,EAAMI,aAAeQ,EAAKE,GAAK,yBAA2B,kBAAtG,cAA8HF,EAAKI,aAF9HJ,EAAKE,gBC5BnC,MAA0B,mCCa1BG,MAVf,WACI,OACI,qBAAKP,UAAU,QAAf,SACA,oBAAIA,UAAU,gBAAd,SACA,qBAAKQ,IAAKC,EAAQC,IAAI,gBCyEfC,EAnED,WAAO,IACTC,EAAWC,cAAXD,OACFxB,EAAWC,cAEXC,EAAQC,aAAY,SAACD,GAAD,MAAuB,CAC7CwB,OAAQxB,EAAMwB,OAAOA,OACrBC,OAAQzB,EAAMwB,OAAOC,OACrBC,eAAgB1B,EAAMwB,OAAOE,eAC7BC,eAAgB3B,EAAMwB,OAAOG,mBAQ7BC,EAAa,SAACC,GAAqB,IAAD,EAGlC,iBADQ7B,EAAMyB,OAAOK,MAAK,SAAClB,GAAD,OAAsBiB,IAAYjB,EAAKmB,kBACjE,aAAO,EAAOC,KAYlB,OATA3B,qBAAU,WAGN,OAF4B,IAAxBL,EAAMyB,OAAOQ,QAAcnC,GCQN,SAACA,GAE9BQ,MAAM,+CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIX,EAhB+C,CACjEH,KA7Bc,YA8BdC,QAcoCa,UDXhCX,ECAmB,SAACwB,GAAD,OAAoB,SAACxB,GAE5CQ,MAAM,uDAAD,OAAwDgB,IACxDf,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIX,EAdkD,CACpEH,KAzBe,aA0BfC,QAYqCa,QDJxByB,EAAaZ,IACf,WACHxB,ECYyD,CACjEH,KA/C4B,+BDqCzB,CAACG,EAAUwB,EAAQtB,EAAMyB,OAAOQ,SAG/B,mCACOjC,EAAM0B,gBAAkB1B,EAAM2B,eAC7B,sBAAKjB,UAAU,SAAf,UACI,oBAAIA,UAAU,gBAAd,4BACA,qBAAKA,UAAU,gBAAf,SAEQV,EAAMwB,OAAOb,KAAI,SAACC,GAEd,OACI,cAAC,IAAD,CAASG,GAAE,kBAAaH,EAAKE,IAA7B,SACI,sBAAKJ,UAAU,cAAf,UACI,qBAAKQ,IAAKU,EAAWhB,EAAKE,IAAKM,IAAKR,EAAKuB,QACzC,sBAAKzB,UAAU,sBAAf,UACI,oBAAIA,UAAU,iBAAd,UAlC3BmB,EAmC0CjB,EAAKE,GAlC/Cd,EAAMyB,OAAOW,QAAO,SAACxB,GAAD,OAAsBiB,IAAYjB,EAAKmB,WAC1DE,UAmC0B,mBAAGvB,UAAU,gBAAb,SAA8BE,EAAKuB,aANTvB,EAAKE,KADHF,EAAKE,IA9B7D,IAACe,UAsB0C,cAAC,EAAD,O,OEVlDQ,EAAkB,iBAA4B,CACvD1C,KAjCsB,sBAoCb2C,EAAiB,SAACC,EAAiBC,EAAiBC,GAAnC,MAA+E,CACzG9C,KApCqB,mBAqCrB4C,SACAC,UACAC,eCwBWC,EAtDD,SAACC,GACXC,QAAQC,IAAIF,GAEZ,IAYIG,EAAc,WACdH,EAAML,gBAAe,EAAOK,EAAM7B,GAAI6B,EAAMI,mBAG5CC,EAAqB,SAACC,IACTA,EAAMC,MAASD,EAAME,cAAgBF,EAAME,gBAC9CC,SAASC,EAAQC,UACvBR,KAKRS,IAAMlD,WAAU,WAAO,IAAD,EAClB,UAAAmD,SAASC,cAAc,0BAAvB,SAA2CC,iBAAiB,QAASV,KACtE,IAEH,IAAMK,EAAUE,IAAMI,OAAuB,MAE7C,OACI,mCAEQhB,EAAMiB,aAEN,qBAAKlD,UAAU,iBAAf,SACI,sBAAKA,UAAU,gBAAgBmD,IAAKR,EAApC,UACI,qBAAKxC,QAASiC,EAAapC,UAAU,gBACrC,qBAAKQ,IAAKyB,EAAMX,IAAKZ,IAAKuB,EAAMR,QAChC,qBAAKtB,QAjCX,WACN8B,EAAMI,iBAAmB,GACzBJ,EAAML,gBAAe,EAAMK,EAAM7B,GAAK,EAAG6B,EAAMI,iBAAmB,IA+B/BrC,UAAU,cACjC,qBAAKG,QAxCX,WACN8B,EAAMI,iBAAmBJ,EAAMmB,aAAe,GAC9CnB,EAAML,gBAAe,EAAMK,EAAM7B,GAAK,EAAG6B,EAAMI,iBAAmB,IAsC/BrC,UAAU,sBCW1CqD,EAtDA,WAAO,IACVhC,EAAYR,cAAZQ,QACFiC,EAAUC,cACVnE,EAAWC,cAEXC,EAAQC,aAAY,SAACD,GAAD,MAAuB,CAC7CkE,eAAgBlE,EAAMyB,OAAOyC,eAC7BC,SAAUnE,EAAMyB,OAAO0C,SACvBP,YAAa5D,EAAMyB,OAAOmC,YAC1BQ,UAAWpE,EAAMyB,OAAO2C,UACxBrB,iBAAkB/C,EAAMyB,OAAOsB,qBAG/Be,EAAuB9D,EAAMkE,eAAejC,OAEhD5B,qBAAU,WACNP,EFD0B,SAACiC,GAAD,OAAqB,SAACjC,GACpDA,EAASuC,KACT/B,MAAM,uDAAD,OAAwDyB,IACxDxB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIX,EATmE,CACrFH,KAtBwB,sBAuBxBC,QAO4Ca,QEH/B4D,EAAoBtC,MAC9B,CAACjC,EAAUiC,IAMd,OACI,qCACM/B,EAAMmE,SACJ,sBAAKzD,UAAU,SAAf,UACI,wBAAQG,QARL,WACfmD,EAAQM,UAOmC5D,UAAU,cAAzC,kBACA,oBAAIA,UAAU,gBAAd,yCACA,qBAAKA,UAAU,gBAAf,SAEQV,EAAMkE,eAAevD,KAAI,SAACC,EAAqB2D,GAC3C,OACI,qBAAK7D,UAAU,eAA6BG,QAAS,kBAAMf,EAASwC,GAAe,EAAM1B,EAAKE,GAAIyD,KAAlG,SACI,qBAAKrD,IAAKN,EAAK4D,aAAcpD,IAAKR,EAAKuB,SADRvB,EAAKE,YAR7C,cAAC,EAAD,IAiBlBd,EAAM4D,aACH,cAAC,EAAD,2BACQ5D,EAAMoE,WADd,IAEIR,YAAa5D,EAAM4D,YACnBtB,eAAgB,SAACC,EAAiBC,EAAiBO,GAAnC,OAAiEjD,EAASwC,EAAeC,EAAQC,EAASO,KAC1HA,iBAAkB/C,EAAM+C,iBACxBe,aAAcA,SCpDnBW,EARD,WACV,OACI,qBAAK/D,UAAU,QAAf,SACA,oBAAIA,UAAU,eAAd,mCCmBOgE,MAdf,WAEE,OAEE,sBAAKhE,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOwC,KAAK,IAAIyB,OAAK,EAAEC,UAAWH,IAClC,cAAC,IAAD,CAAOvB,KAAK,gBAAgByB,OAAK,EAAEC,UAAWvD,IAC9C,cAAC,IAAD,CAAO6B,KAAK,mBAAmB0B,UAAWb,Q,gBCO5Cc,EAAiC,CACjC3E,MAAO,GACPiE,UAAU,EACV/D,WAAY,MA0BD0E,EAvBM,WAAsE,IAArE9E,EAAoE,uDAA5D6E,EAAcE,EAA8C,uCACtF,OAAQA,EAAOpF,MACX,IAAK,YACD,OAAO,2BACAK,GADP,IAEIE,MAAO6E,EAAOnF,QACduE,UAAU,IAElB,IAAK,oBACD,OAAO,2BACAnE,GADP,IAEImE,SAAUY,EAAOnF,UAEzB,IAAK,kBACD,OAAO,2BACAI,GADP,IAEII,WAAY2E,EAAOnF,UAE3B,QACI,OAAOI,ICjCf6E,EAAiC,CACjCX,eAAgB,GAChBE,UAAW,KACXD,UAAU,EACVP,aAAa,EACbb,iBAAkB,MA4BPiC,EAzBM,WAAuE,IAAtEhF,EAAqE,uDAA7D6E,EAAcE,EAA+C,uCACvF,OAAQA,EAAOpF,MACX,IAAK,sBACD,OAAO,2BACAK,GADP,IAEIkE,eAAgBa,EAAOnF,QACvBuE,UAAU,IAElB,IAAK,oBACD,OAAO,2BACAnE,GADP,IAEImE,UAAU,IAElB,IAAK,mBACD,OAAO,2BACAnE,GADP,IAEIoE,UAAWpE,EAAMkE,eAAepC,MAAK,SAAClB,GAAD,OAAeA,EAAKE,KAAOiE,EAAOvC,WACvEoB,YAAamB,EAAOxC,OACpBQ,iBAAkBgC,EAAOtC,aAEjC,QACI,OAAOzC,IC1Bf6E,EAAiC,CACjCrD,OAAQ,GACRC,OAAQ,GACRC,gBAAgB,EAChBC,gBAAgB,GAkCLsD,EA/BM,WAAuE,IAAtEjF,EAAqE,uDAA7D6E,EAAcE,EAA+C,uCACvF,OAAQA,EAAOpF,MACX,IAAK,aACD,OAAO,2BACAK,GADP,IAEIwB,OAAQuD,EAAOnF,QACf8B,gBAAgB,IAExB,IAAK,YACD,OAAO,2BACA1B,GADP,IAEIyB,OAAQsD,EAAOnF,QACf+B,gBAAgB,IAExB,IAAK,0BACD,OAAO,2BACA3B,GADP,IAEI0B,gBAAgB,EAChBF,OAAQ,KAEhB,IAAK,0BACD,OAAO,2BACAxB,GADP,IAEI2B,gBAAgB,EAChBH,OAAQ,KAEhB,QACI,OAAOxB,IC/CbkF,EAAWC,YAAgB,CAC7BhF,UAAW2E,EACXtD,OAAQyD,EACRxD,OAAQuD,IAKNI,EAAmBC,OAAOC,sCAAwCC,IAGzDC,EAFHC,YAAYP,EAAUE,EAAiBM,YAAgBC,OCRnEC,IAASC,OACP,cAAC,IAAD,UACA,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGFhC,SAASsC,eAAe,W","file":"static/js/main.7249dab7.chunk.js","sourcesContent":["import { Dispatch } from \"redux\"\nimport { usersType } from \"../reducers/usersReducer\"\n\nconst ADD_USERS = \"ADD_USERS\"\nconst SET_LOADING_USERS = \"SET_LOADING_USERS\"\nconst SET_ACTIVE_USER = \"SET_ACTIVE_USER\"\n\nexport type userActionTypes = addUsersType | setLoadingUsersType | setActiveUserType\n\ntype addUsersType = {\n    type:typeof ADD_USERS\n    payload: Array<usersType>\n}\ntype setLoadingUsersType = {\n    type:typeof SET_LOADING_USERS\n    payload: boolean\n}\ntype setActiveUserType = {\n    type:typeof SET_ACTIVE_USER\n    payload: number\n}\n\nexport const addUsers = (users: Array<usersType>): addUsersType => ({\n    type: ADD_USERS,\n    payload: users\n})\n\nexport const fetchUsers = () => (dispatch: Dispatch<userActionTypes>) => {\n    dispatch(setLoadingUsers(false))\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(json => dispatch(addUsers(json)))\n}\n\nexport const setLoadingUsers = (value: boolean): setLoadingUsersType => ({\n    type: SET_LOADING_USERS,\n    payload: value\n})\n\nexport const setActiveUser = (userId: number): setActiveUserType => ({\n    type: SET_ACTIVE_USER,\n    payload: userId\n})\n\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { fetchUsers, setActiveUser } from '../redux/actions/usersAction';\nimport { usersType } from '../redux/reducers/usersReducer';\nimport { stateType } from '../redux/store';\n\nconst Users = () => {\n    const dispatch = useDispatch();\n    const state = useSelector((state: stateType) => ({\n        users: state.usersPage.users,\n        activeUser: state.usersPage.activeUser\n    }))\n\n    useEffect(() => {\n        dispatch(fetchUsers())\n    }, [dispatch]);\n    return (\n        <header className=\"header\">\n            <div className=\"users\">\n                <nav className=\"users__nav\">\n                    <ul className=\"users__list\">\n                        {\n                            state.users.map((item: usersType) => {\n                                return (\n                                    <li\n                                        className=\"users__list-item\"\n                                        key={item.id}\n                                        onClick={() => dispatch(setActiveUser(item.id))}>\n                                        <NavLink to={`/user/${item.id}`} className={state.activeUser === item.id ? 'user__list-link-active' : \"user__list-link\"}   > {item.username}</NavLink>\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                </nav>\n            </div>\n        </header> \n    )\n}\n\nexport default Users\n","export default __webpack_public_path__ + \"static/media/loaded.fedfc467.gif\";","import React from 'react';\nimport loaded from '../assets/loaded.gif'\n\nfunction Loaded() {\n    return (\n        <div className=\"start\">\n        <h1 className=\"start__loaded\">\n        <img src={loaded} alt='Loaded'/>\n        </h1>\n        </div>\n    )\n}\n\nexport default Loaded;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, NavLink } from 'react-router-dom';\n\nimport { fetchAlbums, fetchPhotos, setLoadedAlbumsFalse } from '../redux/actions/albumAction';\nimport { albumsType, photosType } from '../redux/reducers/albumReducer'\nimport { stateType } from '../redux/store';\nimport Loaded from './Loaded';\n\ntype useParamsType = {\n    userId: string\n}\n\nconst Album = () => {\n    const { userId } = useParams<useParamsType>();\n    const dispatch = useDispatch();\n\n    const state = useSelector((state: stateType) => ({\n        albums: state.albums.albums,\n        photos: state.albums.photos,\n        isLoadedAlbums: state.albums.isLoadedAlbums,\n        isLoadedPhotos: state.albums.isLoadedPhotos\n    }))\n\n    let sumPhotos = (idAlbum: number) => {\n        let length = state.photos.filter((item: photosType) => idAlbum === item.albumId)\n        return length.length\n    }\n\n    let coverAlbum = (idAlbum: number) => {\n        let cover: photosType | undefined\n        cover = state.photos.find((item: photosType) => idAlbum === item.albumId)\n        return cover?.url\n    }\n\n    useEffect(() => {\n        if (state.photos.length === 0) dispatch(fetchPhotos())\n        dispatch(fetchAlbums(+userId))\n        return () => {\n            dispatch(setLoadedAlbumsFalse())\n           // dispatch(setLoadedPhotosFalse())\n        }\n    }, [dispatch, userId, state.photos.length]);\n\n    return (\n        <>\n            {!(state.isLoadedAlbums && state.isLoadedPhotos) ? <Loaded /> :\n                <div className=\"albums\">\n                    <h1 className=\"albums__title\">List of albums</h1>\n                    <div className=\"albums__items\">\n                        {\n                            state.albums.map((item: albumsType) => {\n\n                                return (\n                                    <NavLink to={`/photos/${item.id}`} key={item.id}>\n                                        <div className=\"album__item\" key={item.id}>\n                                            <img src={coverAlbum(item.id)} alt={item.title} />\n                                            <div className=\"album__item-content\">\n                                                <h2 className=\"content__count\">\n                                                    {sumPhotos(item.id)}\n                                                </h2>\n                                                <p className=\"content__desc\">{item.title}</p>\n\n                                            </div>\n                                        </div>\n                                    </NavLink>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            }\n        </>\n\n\n\n\n    )\n}\n\nexport default Album;\n","import { Dispatch } from \"redux\"\nimport { albumsType, photosType } from \"../reducers/albumReducer\"\n\nconst ADD_ALBUMS = 'ADD_ALBUMS'\nconst ADD_PHOTO = 'ADD_PHOTO'\nconst SET_LOADED_ALBUMS_FALSE = 'SET_LOADED_ALBUMS_FALSE'\nconst SET_LOADED_PHOTOS_FALSE = 'SET_LOADED_PHOTOS_FALSE'\n\nexport type albumActionTypes = addAlbumsType | addPhotoType | setLoadedAlbumsFalseType | setLoadedPhotosFalseType\n\ntype addAlbumsType = {\n    type: typeof ADD_ALBUMS\n    payload: Array<albumsType>\n}\n\ntype addPhotoType = {\n    type: typeof ADD_PHOTO\n    payload: Array<photosType>\n}\n\ntype setLoadedAlbumsFalseType = {\n    type: typeof SET_LOADED_ALBUMS_FALSE\n}\n\ntype setLoadedPhotosFalseType = {\n    type: typeof SET_LOADED_PHOTOS_FALSE\n}\nexport const addAlbums = (albums: Array<albumsType>): addAlbumsType => ({\n    type: ADD_ALBUMS,\n    payload: albums\n})\n\nexport const addPhoto = (photo: Array<photosType>): addPhotoType => ({\n    type: ADD_PHOTO,\n    payload: photo\n})\n\nexport const fetchAlbums = (userId: number) => (dispatch: Dispatch<albumActionTypes>) => {\n    // dispatch(setLoadedAlbumsFalse())\n    fetch(`https://jsonplaceholder.typicode.com/albums/?userId=${userId}`)\n        .then(response => response.json())\n        .then(json => dispatch(addAlbums(json)))\n}\n\nexport const fetchPhotos = () => (dispatch: Dispatch<albumActionTypes>) => {\n    //  dispatch(setLoadedPhotosFalse())\n    fetch(`https://jsonplaceholder.typicode.com/photos`)\n        .then(response => response.json())\n        .then(json => dispatch(addPhoto(json)))\n}\n\nexport const setLoadedAlbumsFalse = (): setLoadedAlbumsFalseType => ({\n    type: SET_LOADED_ALBUMS_FALSE\n})\n\nexport const setLoadedPhotosFalse = (): setLoadedPhotosFalseType => ({\n    type: SET_LOADED_PHOTOS_FALSE\n})\n","import { Dispatch } from \"redux\"\nimport { typePhotoInfo } from \"../reducers/photoReducer\"\n\nconst ADD_PHOTO_FOR_ALBUM = 'ADD_PHOTO_FOR_ALBUM'\nconst SET_LOADING_FALSE = 'SET_LOADING_FALSE'\nconst SET_MODAL_ACTIVE = 'SET_MODAL_ACTIVE'\n\nexport type photoActionTypes = addPhotoforAlbumType | setLoadingFalseType | setModalActiveType\n\ntype addPhotoforAlbumType = {\n    type: typeof ADD_PHOTO_FOR_ALBUM\n    payload: Array<typePhotoInfo>\n}\n\ntype setLoadingFalseType = {\n    type: typeof SET_LOADING_FALSE\n}\n\ntype setModalActiveType = {\n    type: typeof SET_MODAL_ACTIVE\n    status: boolean\n    photoId: number\n    indexPhoto: number\n}\nexport const addPhotoforAlbum = (albums: Array<typePhotoInfo>): addPhotoforAlbumType => ({\n    type: ADD_PHOTO_FOR_ALBUM,\n    payload: albums\n})\n\nexport const fetchPhotoForAlbum = (albumId: number) => (dispatch: Dispatch<photoActionTypes>) => {\n    dispatch(setLoadingFalse())\n    fetch(`https://jsonplaceholder.typicode.com/photos?albumId=${albumId}`)\n        .then(response => response.json())\n        .then(json => dispatch(addPhotoforAlbum(json)))\n}\n\nexport const setLoadingFalse = (): setLoadingFalseType => ({\n    type: SET_LOADING_FALSE\n})\n\nexport const setModalActive = (status: boolean, photoId: number, indexPhoto: number): setModalActiveType => ({\n    type: SET_MODAL_ACTIVE,\n    status,\n    photoId,\n    indexPhoto\n})","import React from 'react';\n\ntype propsType = {\n    albumId: number\n    id: number\n    indexPhotoActive: number\n    modalActive: boolean\n    photosLength: number\n    thumbnailUrl: string\n    title: string\n    url: string\n    setModalActive: (status: boolean, photoId: number, indexPhotoActive: number) => void\n}\n\nconst Modal = (props: propsType) => {\n    console.log(props)\n\n    let nextOne = () => {\n        if (props.indexPhotoActive < props.photosLength - 1) {\n            props.setModalActive(true, props.id + 1, props.indexPhotoActive + 1)\n        }\n    }\n\n    let prevOne = () => {\n        if (props.indexPhotoActive > 0) {\n            props.setModalActive(true, props.id - 1, props.indexPhotoActive - 1)\n        }\n    }\n\n    let closeWindow = () => {\n        props.setModalActive(false, props.id, props.indexPhotoActive)\n    }\n\n    let handleOutsideClick = (event: any) => {\n        const path = event.path || (event.composedPath && event.composedPath());\n        if (!path.includes(sortRef.current)) {\n            closeWindow();\n        }\n    };\n\n\n    React.useEffect(() => {\n        document.querySelector('.modal__wrapper')?.addEventListener('click', handleOutsideClick);\n    }, []);\n\n    const sortRef = React.useRef<HTMLDivElement>(null);\n\n    return (\n        <>\n            {\n                props.modalActive &&\n\n                <div className=\"modal__wrapper\">\n                    <div className=\"modal__window\" ref={sortRef}>\n                        <div onClick={closeWindow} className=\"btn__cancel\"></div>\n                        <img src={props.url} alt={props.title} />\n                        <div onClick={prevOne} className=\"btn__back\"></div>\n                        <div onClick={nextOne} className=\"btn__next\"></div>\n                    </div>\n\n                </div>\n\n            }\n        </>\n    )\n\n}\n\nexport default Modal\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { fetchPhotoForAlbum, setModalActive } from '../redux/actions/photoAction';\nimport { typePhotoInfo } from '../redux/reducers/photoReducer';\nimport { stateType } from '../redux/store';\nimport Loaded from './Loaded';\nimport Modal from './Modal';\n\ntype useParamsType = {\n    albumId: string\n}\n\nconst Photos = () => {\n    const { albumId } = useParams<useParamsType>();\n    const history = useHistory()\n    const dispatch = useDispatch();\n\n    const state = useSelector((state: stateType) => ({\n        photosForAlbum: state.photos.photosForAlbum,\n        isLoaded: state.photos.isLoaded,\n        modalActive: state.photos.modalActive,\n        fullPhoto: state.photos.fullPhoto!,\n        indexPhotoActive: state.photos.indexPhotoActive!\n    }))\n\n    let photosLength: number = state.photosForAlbum.length\n\n    useEffect(() => {\n        dispatch(fetchPhotoForAlbum(+albumId))\n    }, [dispatch, albumId]);\n\n    let goBackHandle = () => {\n        history.goBack()\n    }\n\n    return (\n        <>\n            {!state.isLoaded ? <Loaded /> :\n                <div className=\"photos\">\n                    <button onClick={goBackHandle} className=\"photos__btn\">Back</button>  \n                    <h1 className=\"photos__title\">List of photos in the album</h1>\n                    <div className=\"photos__items\">\n                        {\n                            state.photosForAlbum.map((item: typePhotoInfo, index: number) => {\n                                return (\n                                    <div className=\"photos__item\" key={item.id} onClick={() => dispatch(setModalActive(true, item.id, index))} >\n                                        <img src={item.thumbnailUrl} alt={item.title} />\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            }\n            {state.modalActive &&\n                <Modal \n                    {...state.fullPhoto}\n                    modalActive={state.modalActive}\n                    setModalActive={(status: boolean, photoId: number, indexPhotoActive: number ) => dispatch(setModalActive(status, photoId, indexPhotoActive))}\n                    indexPhotoActive={state.indexPhotoActive}\n                    photosLength={photosLength}\n                />}\n        </>\n    )\n}\n\nexport default Photos;\n","import React from 'react'\n\nconst Start = () => {\n    return (\n        <div className=\"start\">\n        <h1 className=\"start__title\">Select a user name</h1>\n        </div>\n    )\n}\n\nexport default Start\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Users from './components/Users';\nimport Album from './components/Album';\nimport Photos from './components/Photos';\nimport Start from './components/Start'\n\n\n\nfunction App() {\n\n  return (\n  \n    <div className=\"wrapper\">\n      <Users />\n      <Route path='/' exact  component={Start} />\n      <Route path='/user/:userId' exact  component={Album} />\n      <Route path='/photos/:albumId' component={Photos} />\n\n      </div>\n  );\n}\n\nexport default App;\n","import { userActionTypes } from \"../actions/usersAction\"\n\ntype initialStateType = {\n    users: Array<usersType>\n    isLoaded: boolean\n    activeUser: number | null\n}\ntype geoType = {\n    lat:string\n    lng:string\n}\ntype addressType = {\n    street:string\n    suite:string\n    city:string\n    zipcode:string\n    geo: geoType\n}\nexport type usersType = {\n    id: number\n    name: string\n    username: string\n    email: string\n    address:addressType\n}\nlet initialState: initialStateType = {\n    users: [],\n    isLoaded: false,\n    activeUser: null\n}\n\nconst usersReducer = (state = initialState, action: userActionTypes):initialStateType  => {\n    switch (action.type) {\n        case 'ADD_USERS':\n            return {\n                ...state,\n                users: action.payload,\n                isLoaded: true\n            }\n        case 'SET_LOADING_USERS':\n            return {\n                ...state,\n                isLoaded: action.payload\n            }\n        case 'SET_ACTIVE_USER':\n            return {\n                ...state,\n                activeUser: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default usersReducer;\n","import { photoActionTypes } from \"../actions/photoAction\"\n\ntype initialStateType = {\n    photosForAlbum: Array<typePhotoInfo>\n    fullPhoto: typePhotoInfo | null | undefined\n    isLoaded: boolean\n    modalActive: boolean\n    indexPhotoActive: number | null\n}\nexport type typePhotoInfo = {\n    albumId: number\n    id: number\n    title: string\n    url: string\n    thumbnailUrl: string\n}\n\nlet initialState: initialStateType = {\n    photosForAlbum: [],\n    fullPhoto: null,\n    isLoaded: false,\n    modalActive: false,\n    indexPhotoActive: null,\n}\n\nconst photoReducer = (state = initialState, action: photoActionTypes): initialStateType => {\n    switch (action.type) {\n        case 'ADD_PHOTO_FOR_ALBUM':\n            return {\n                ...state,\n                photosForAlbum: action.payload,\n                isLoaded: true\n            }\n        case 'SET_LOADING_FALSE':\n            return {\n                ...state,\n                isLoaded: false\n            }\n        case 'SET_MODAL_ACTIVE':\n            return {\n                ...state,\n                fullPhoto: state.photosForAlbum.find((item: any) => item.id === action.photoId),\n                modalActive: action.status,\n                indexPhotoActive: action.indexPhoto\n            }\n        default:\n            return state\n    }\n}\n\nexport default photoReducer;\n","import { albumActionTypes } from \"../actions/albumAction\"\n\ntype initialStateType = {\n    albums: Array<albumsType>\n    photos: Array<photosType>\n    isLoadedAlbums: boolean\n    isLoadedPhotos: boolean\n}\nexport type albumsType = {\n    userId: number\n    id: number\n    title: string\n}\nexport type photosType = {\n    albumId: number\n    id: number\n    title: string\n    url: string\n    thumbnailUrl: string\n}\nlet initialState: initialStateType = {\n    albums: [],\n    photos: [],\n    isLoadedAlbums: false,\n    isLoadedPhotos: false\n}\n\nconst albumReducer = (state = initialState, action: albumActionTypes): initialStateType => {\n    switch (action.type) {\n        case 'ADD_ALBUMS':\n            return {\n                ...state,\n                albums: action.payload,\n                isLoadedAlbums: true\n            }\n        case 'ADD_PHOTO':\n            return {\n                ...state,\n                photos: action.payload,\n                isLoadedPhotos: true\n            }\n        case 'SET_LOADED_ALBUMS_FALSE':\n            return {\n                ...state,\n                isLoadedAlbums: false,\n                albums: []\n            }\n        case 'SET_LOADED_PHOTOS_FALSE':\n            return {\n                ...state,\n                isLoadedPhotos: false,\n                albums: []\n            }\n        default:\n            return state\n    }\n}\n\nexport default albumReducer;\n\n\n\n\n","import { combineReducers, createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport usersReducer from './reducers/usersReducer';\nimport photoReducer from './reducers/photoReducer';\nimport albumReducer from './reducers/albumReducer'\n\nconst reducers = combineReducers({\n    usersPage: usersReducer,\n    albums: albumReducer,\n    photos: photoReducer\n})\n\nexport type stateType = ReturnType<typeof reducers>\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport store from './redux/store'\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}